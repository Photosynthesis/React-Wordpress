{"version":3,"sources":["components/WPPost.jsx","components/PostList.jsx","reportWebVitals.js","index.js"],"names":["WPPost","props","state","unixDate","Date","parse","this","postData","date","className","href","link","title","rendered","toString","excerpt","React","Component","PostList","fetchPosts","bind","error","posts","isLoaded","filters","api_url","window","wpReactSettings","apiUrl","console","log","setState","fetch","then","res","json","result","message","length","map","post","handleTagClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","postList","document","getElementById","ReactDOM","render"],"mappings":"2MA0BeA,E,kDAtBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAInB,WACE,IAAIC,EAAW,IAAIC,KAAKA,KAAKC,MAAMC,KAAKL,MAAMM,SAASC,OACvD,OACE,gCACE,oBAAIC,UAAU,YAAd,SACA,mBAAGC,KAAMJ,KAAKL,MAAMM,SAASI,KAA7B,SACCL,KAAKL,MAAMM,SAASK,MAAMC,aAG3B,sBAAMJ,UAAU,WAAhB,SAA4BN,EAASW,aACrC,mBAAGL,UAAU,aAAb,SACCH,KAAKL,MAAMM,SAASQ,QAAQF,kB,GAhBhBG,IAAMC,WC8DZC,E,kDA1Db,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKlB,MAAQ,CAAEmB,MAAO,KAAMC,MAAO,KAAMC,UAAU,GAHlC,E,8CAMnB,SAAWC,GAAS,IAAD,OACbC,EAAUC,OAAOC,gBAAgBC,OAErCC,QAAQC,IAAI,uBAAuBL,GAEnCnB,KAAKyB,SAAS,CAACR,UAAW,IAE1BS,MAAMP,EAAQ,IAAID,GACfS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCP,QAAQC,IAAI,WACZD,QAAQC,IAAIM,GACZ,EAAKL,SAAS,CACZR,UAAU,EACVD,MAAOc,OAGX,SAACf,GACC,EAAKU,SAAS,CACZR,UAAU,EACVF,e,+BAMV,WACEf,KAAKa,WAAW,Q,oBAGlB,WAAU,IAAD,OAEP,EAAmCb,KAAKJ,MAAhCmB,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAAUD,EAAzB,EAAyBA,MAIzB,OAAID,EACK,0CAAaA,EAAMgB,WAChBd,EAIR,sBAAKd,UAAU,WAAf,UACA,sBAAKA,UAAU,aAAf,UAA6Ba,EAAMgB,OAAnC,oBACChB,EAAMiB,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAQjC,SAAUiC,EAAMC,eAAgB,EAAKA,uBAL9D,iD,GAhDUzB,IAAMC,WCOdyB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCGRO,EAAWC,SAASC,eAAe,aAErCF,GACFG,IAASC,OAAO,cAAC,EAAD,IAAcJ,GAMhCR,M","file":"static/js/main.1b982ccb.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass WPPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    var unixDate = new Date(Date.parse(this.props.postData.date));\n    return(\n      <div>\n        <h2 className=\"postTitle\">\n        <a href={this.props.postData.link}>\n        {this.props.postData.title.rendered}\n        </a>\n        </h2>\n        <span className=\"postDate\">{unixDate.toString()}</span>\n        <p className=\"postExerpt\">\n        {this.props.postData.excerpt.rendered}\n        </p>\n\n      </div>\n    );\n  }\n}\nexport default WPPost;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WPPost from './WPPost'\n\nclass PostList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fetchPosts = this.fetchPosts.bind(this);\n    this.state = { error: null, posts: null, isLoaded: false };\n  }\n\n  fetchPosts(filters){\n    var api_url = window.wpReactSettings.apiUrl;\n\n    console.log(\"Fetching posts from \"+api_url);\n\n    this.setState({isLoaded : false});\n\n    fetch(api_url+'?'+filters)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(\"Result:\");\n          console.log(result);\n          this.setState({\n            isLoaded: true,\n            posts: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentDidMount() {\n    this.fetchPosts(null);\n  }\n\n  render() {\n\n    const { error, isLoaded, posts } = this.state;\n\n    const log = (type) => console.log.bind(console, type);\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"postList\">\n        <div className=\"post-count\">{posts.length} results found</div>\n        {posts.map((post) =>  <WPPost postData={post} handleTagClick={this.handleTagClick} />)}\n        </div>\n      );\n    }\n  }\n}\n\nexport default PostList;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport PostList from './components/PostList'\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\n\nconst postList = document.getElementById('post-list');\n\nif (postList) {\n  ReactDOM.render(<PostList />, postList);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}